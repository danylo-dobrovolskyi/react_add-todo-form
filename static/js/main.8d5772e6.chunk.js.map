{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","item","getUserById","userId","usersFromServer","find","App","useState","visibleTodos","setVisibleTodos","setTitle","selectedUser","setSelectedUser","titleEmpty","setTitleEmpty","userSelected","setuserSelected","action","method","onSubmit","event","preventDefault","trimmedTitle","trim","Number","listOfTodos","todoToAdd","Math","max","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8d5772e6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>{name}</a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    completed,\n    title,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={\n        classNames('TodoInfo', {\n          'TodoInfo--completed': completed,\n        })\n      }\n    >\n\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(item => (\n      <TodoInfo key={item.id} todo={item} />\n    ))}\n  </section>\n);\n","import './App.scss';\n\nimport { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nexport const todos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todos);\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('0');\n  const [titleEmpty, setTitleEmpty] = useState(false);\n  const [userSelected, setuserSelected] = useState(false);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleEmpty(false);\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(event.target.value);\n    setuserSelected(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const trimmedTitle = title.trim();\n\n    if (!trimmedTitle) {\n      setTitleEmpty(true);\n    }\n\n    const user = getUserById(Number(selectedUser));\n\n    if (!user) {\n      setuserSelected(true);\n    }\n\n    if (!user || !trimmedTitle) {\n      return;\n    }\n\n    const createTodoId = (listOfTodos: Todo[]) => (\n      Math.max(...listOfTodos.map(todo => todo.id)) + 1\n    );\n\n    const todoToAdd: Todo = {\n      id: createTodoId(visibleTodos),\n      title,\n      userId: user.id,\n      completed: false,\n      user,\n    };\n\n    if (title && selectedUser !== '0') {\n      setVisibleTodos([...visibleTodos, todoToAdd]);\n      setTitle('');\n      setSelectedUser('0');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              id=\"title\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleTitle}\n            />\n          </label>\n\n          {titleEmpty\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n        <div className=\"field\">\n          <label>\n            {'User: '}\n\n            <select\n              data-cy=\"userSelect\"\n              id=\"user\"\n              value={selectedUser}\n              onChange={handleUser}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n\n              {usersFromServer.map((user) => (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n\n            {userSelected\n              && <span className=\"error\">Please choose a user</span>}\n          </label>\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={visibleTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}